#!/usr/bin/env Rscript

# License: CC0 (just be nice and point others to where you got this)
# Author: Robert M Flight <rflight79@gmail.com>, github.com/rmflight
#
# This is a post-commit hook that after a successful commit subsequently 
# increments the package version in DESCRIPTION and commits that. 
# Analogous to the pre-commit at https://github.com/rmflight/r_git_hooks, 
# but useful if you only have good reasons for not doing it on the pre-commit.
#
# To install it, simply copy this into the ".git/hooks/post-commit" 
# file of your git repo, and make it executable. 
# This has been tested on both Linux and Windows installations.
#
# In instances where you do NOT want the version incremented, 
# add the environment variable doIncrement=FALSE to your git 
# call. eg "doIncrement=FALSE git commit -m "commit message"". 
# 
# This is useful when you change the major version number for example.

do_increment <- TRUE # default

# get the environment variable and modify if necessary
tmp_env <- as.logical(Sys.getenv("doIncrement"))
if (!is.na(tmp_env)){
  do_increment <- tmp_env
}

if (do_increment){
  # if you have different fields that you want to maintain the white space,
  # modify / add them here.
  keep_white_fields <- c("Authors@R", "DESCRIPTION", "Imports", "Suggests",
                         "URL")
  curr_dcf <- read.dcf("DESCRIPTION", keep.white = keep_white_fields)
  curr_version <- curr_dcf[1, "Version"]
  split_version <- strsplit(curr_version, ".", fixed = TRUE)[[1]]
  n_ver <- length(split_version)
  split_version[n_ver] <- as.character(as.integer(split_version[n_ver]) + 1)
  new_version <- paste(split_version, collapse=".")
  curr_dcf[1,"Version"] <- new_version
  if ("Date" %in% colnames(curr_dcf)) curr_dcf[1, "Date"] <- strftime(as.POSIXlt(Sys.Date()), "%Y-%m-%d")
  write.dcf(curr_dcf, "DESCRIPTION")
  system("git add DESCRIPTION")
  system('doIncrement=FALSE git commit -m "increment package version"') # doIncrement=FALSE  is required, otherwise we end up in an infinite loop
  cat("Incremented package version", curr_version, "-->", new_version, "and committed!\n")
}